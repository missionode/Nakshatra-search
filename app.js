
document.addEventListener("DOMContentLoaded", () => {

  const nakshatraList = [
    "Ashwini~‡¥Ö‡¥∂‡µç‡¥µ‡¥§‡¥ø", "Bharani~‡¥≠‡¥∞‡¥£‡¥ø", "Krittika~‡¥ï‡¥æ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï", "Rohini~‡¥∞‡µã‡¥π‡¥ø‡¥£‡¥ø", "Mrigashira~‡¥Æ‡¥ï‡¥Ø‡¥ø‡¥∞‡¥Ç",
    "Ardra~‡¥§‡¥ø‡¥∞‡µÅ‡¥µ‡¥æ‡¥§‡¥ø‡¥∞", "Punarvasu~‡¥™‡µÅ‡¥®‡¥É‡µº‡¥§‡¥Ç", "Pushya~‡¥™‡µÇ‡¥Ø‡¥Ç", "Ashlesha~‡¥Ü‡¥Ø‡¥ø‡¥≤‡µç‡¥Ø‡¥Ç", "Magha~‡¥Æ‡¥ï‡¥Ç",
    "Purva Phalguni~‡¥â‡¥§‡µç‡¥∞‡¥Ç", "Uttara Phalguni~‡¥Ö‡¥§‡µç‡¥§‡¥Ç", "Hasta~‡¥ö‡¥ø‡¥§‡µç‡¥§‡¥ø‡¥∞", "Chitra~‡¥ö‡µã‡¥§‡¥ø", "Swati~‡¥µ‡¥ø‡¥∂‡¥æ‡¥ñ‡¥Ç",
    "Vishakha~‡¥Ö‡¥®‡¥ø‡¥¥‡¥Ç", "Anuradha~‡¥§‡µÉ‡¥ï‡µç‡¥ï‡µá‡¥ü‡µç‡¥ü", "Jyeshtha~‡¥§‡µÉ‡¥ï‡µç‡¥ï‡µá‡¥ü‡µç‡¥ü", "Mula~‡¥Æ‡µÇ‡¥≤‡¥Ç", "Purva Ashadha~‡¥™‡µÇ‡¥∞‡¥æ‡¥ü‡¥Ç",
    "Uttara Ashadha~‡¥â‡¥§‡µç‡¥∞‡¥æ‡¥ü‡¥Ç", "Shravana~‡¥§‡¥ø‡¥∞‡µÅ‡¥µ‡µã‡¥£‡¥Ç", "Dhanishta~‡¥Ö‡¥µ‡¥ø‡¥ü‡µç‡¥ü‡¥Ç", "Shatabhisha~‡¥ö‡¥§‡¥Ø‡¥Ç", "Purva Bhadrapada~‡¥™‡µÇ‡¥∞‡µÅ‡¥∞‡µÅ‡¥ü‡µç‡¥ü‡¥æ‡¥§‡¥ø",
    "Uttara Bhadrapada~‡¥â‡¥§‡µç‡¥∞‡¥ü‡µç‡¥ü‡¥æ‡¥§‡¥ø", "Revati~‡¥∞‡µá‡¥µ‡¥§‡¥ø"
  ];

 
  const resultsContainer = document.getElementById("results");

  function getTodaysNakshatraIndex() {
    const baseDate = new Date("2020-01-01");
    const today = new Date();
    const daysElapsed = Math.floor((today - baseDate) / (1000 * 60 * 60 * 24));
    return daysElapsed % 27;
  }

  function calculateInsight(index) {
    const nak = nakshatraList[index];
    const dayNumber = index + 1;

    // Example pattern formulas (simplified; you can expand later)
    const isSafe = dayNumber % 2 === 0;
    const interestedInDating = (dayNumber % 3 === 1 || dayNumber === 7);
    const consentPossible = (dayNumber % 5 === 0 || nak.includes("Ash"));
    const oppositionLikely = (dayNumber % 4 === 0 && !nak.includes("Pu"));
    const fertility = (dayNumber % 3 === 0 || dayNumber === 6);

    // Only show if at least one positive insight
    if (isSafe || interestedInDating || consentPossible || fertility) {
      return {
        nakshatra: nak,
        isSafe,
        interestedInDating,
        consentPossible,
        oppositionLikely,
        fertility
      };
    }

    return null;
  }

  function renderInsightCard(insight) {
    const card = document.createElement("div");
    card.className = "insight-card";

    card.innerHTML = `
      <h2>${insight.nakshatra}</h2>
      <ul>
        ${insight.isSafe ? "<li>‚úÖ Safety period active</li>" : ""}
        ${insight.interestedInDating ? "<li>üíû Likely open to dating</li>" : ""}
        ${insight.consentPossible ? "<li>üí¨ Openness to intimacy</li>" : ""}
        ${insight.fertility ? "<li>üå∏ Fertility is high</li>" : ""}
      </ul>
    `;

    resultsContainer.appendChild(card);
  }

  function runApp() {
    resultsContainer.innerHTML = "";

    const todayIndex = getTodaysNakshatraIndex();

    for (let i = 0; i < nakshatraList.length; i++) {
      const result = calculateInsight(i);
      if (result) {
        renderInsightCard(result);
      }
    }

    const info = document.createElement("div");
    info.className = "footer-note";
    info.innerHTML = `<p><strong>Today's reference Nakshatra Index:</strong> ${todayIndex + 1} (${nakshatraList[todayIndex]})</p>`;
    resultsContainer.appendChild(info);
  }

  runApp();
});
